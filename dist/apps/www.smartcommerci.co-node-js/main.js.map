{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/www.smartcommerci.co-node-js/src/controllers/business.js","webpack:///./apps/www.smartcommerci.co-node-js/src/controllers/documentation.js","webpack:///./apps/www.smartcommerci.co-node-js/src/controllers/users.js","webpack:///./apps/www.smartcommerci.co-node-js/src/main.js","webpack:///./apps/www.smartcommerci.co-node-js/src/models/affiliates.js","webpack:///./apps/www.smartcommerci.co-node-js/src/models/carts.js","webpack:///./apps/www.smartcommerci.co-node-js/src/models/db.js","webpack:///./apps/www.smartcommerci.co-node-js/src/models/listas_compras.js","webpack:///./apps/www.smartcommerci.co-node-js/src/models/masters.js","webpack:///./apps/www.smartcommerci.co-node-js/src/models/orders.js","webpack:///./apps/www.smartcommerci.co-node-js/src/models/posts.js","webpack:///./apps/www.smartcommerci.co-node-js/src/models/products.js","webpack:///./apps/www.smartcommerci.co-node-js/src/models/users_affiliates.js","webpack:///./apps/www.smartcommerci.co-node-js/src/models/users_clients.js","webpack:///./apps/www.smartcommerci.co-node-js/src/models/users_masters.js","webpack:///./apps/www.smartcommerci.co-node-js/src/routes/routes.js","webpack:///external \"body-parser\"","webpack:///external \"consign\"","webpack:///external \"cors\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"formidable\"","webpack:///external \"fs\"","webpack:///external \"get-image-colors\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"moment\"","webpack:///external \"mysql\"","webpack:///external \"nodemailer\"","webpack:///external \"path\"","webpack:///external \"sequelize\"","webpack:///external \"tslib\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/*========= SMARTCOMMERCI BUSINESS ========== \r\n\r\nAuthor: Ronan Rodrigues\r\nContact: Tel.: 27 996011204, Mail: ronan.rodrigues@pullup.tech\r\nObjective: Consultar e alterar os dados conforme as regras do negócio\r\n\r\n============================================*/\r\n\r\n\r\n\r\n\r\n// Importando os modelos\r\nvar masters = require('../models/masters');\r\nvar affiliates = require('../models/affiliates');\r\nvar carts = require('../models/carts');\r\nvar orders = require('../models/orders');\r\nvar posts = require('../models/posts');\r\nvar listas_compras = require('../models/listas_compras');\r\nvar products = require('../models/products');\r\nconst jwt = require(\"jsonwebtoken\");\r\nconst mysql = require(\"mysql\");\r\nconst nodemailer = require('nodemailer');\r\nvar moment = require('moment');\r\n\r\n// Importando as variaveis de ambiente\r\nrequire(\"dotenv\").config();\r\n\r\n//==========================================================================================================\r\n\r\n// Configurando uma conexão com o database\r\nconst conn = mysql.createConnection({\r\n    host: process.env.host,\r\n    port: process.env.port,\r\n    user: process.env.user,\r\n    password: process.env.password,\r\n    database: process.env.database\r\n});\r\n\r\n//==========================================================================================================\r\n\r\n// Função para executar um comando SQL\r\nasync function execSQL(query, res) {\r\n    console.log(query);\r\n    conn.query(query, async function (error, results, fields) {\r\n        if (!error) {\r\n            res.send(results);\r\n        } else {\r\n            res.send(error);\r\n        }\r\n    });\r\n}\r\n\r\n//==========================================================================================================\r\n\r\n// Função para envio de e-mails\r\n/*\r\n    Pré requisitos:\r\n        1- 'message' => array com os conteúdos 'to, from, subject, html'\r\n        2- 'parameters' => array com os dados de conexão 'host, port, secure, auth, tls, username'\r\n    \r\n    Retornos:\r\n        1- 'email enviado com sucesso\" => ocorreu tudo bem.\r\n        2- 'messageError' => feedback com a mensagem de erro ocasionado.\r\n*/\r\nasync function sendMail(parameters, message) {\r\n    const transporter = nodemailer.createTransport({\r\n        host: parameters.host,\r\n        port: parameters.port,\r\n        secure: parameters.secure, // true for 465, false for other ports\r\n        auth: parameters.auth,\r\n        username: parameters.username,\r\n        tls: { rejectUnauthorized: parameters.tls }\r\n      });\r\n    \r\n   const mailOptions = {\r\n        from: message.from,\r\n        to: message.to,\r\n        subject: message.subject,    \r\n        html:message.html\r\n    };\r\n    \r\n\r\n    transporter.sendMail(mailOptions, function(error, info){\r\n        if (error) {\r\n        console.log(\"Erro ao enviar!\\n\"+error)\r\n         return error\r\n        } else {\r\n            console.log(\"email enviado com sucesso!\")\r\n          return info.response\r\n        }\r\n    });\r\n\r\n    \r\n\r\n}\r\n\r\n//==========================================================================================================\r\n\r\n// Acionamento dos modelos 'findAll' do sequelize\r\nmodule.exports.masters = function(err, res){\r\n    masters.findAll().then(data=>{\r\n        if(!err){\r\n            res.send(data)\r\n        }\r\n    })\r\n} \r\n\r\nmodule.exports.affiliates = function(err, res){\r\n    affiliates.findAll().then(data=>{\r\n        if(!err){\r\n            res.send(data)\r\n        }\r\n    })\r\n} \r\n\r\nmodule.exports.carts = function(err, res){\r\n    carts.findAll().then(data=>{\r\n        if(!err){\r\n            res.send(data)\r\n        }\r\n    })\r\n} \r\n\r\nmodule.exports.posts = function(err, res){\r\n    posts.findAll().then(data=>{\r\n        if(!err){\r\n            res.send(data)\r\n        }\r\n    })\r\n}\r\n\r\nmodule.exports.products = function(err, res){\r\n    products.findAll().then(data=>{\r\n        if(!err){\r\n            res.send(data)\r\n        }\r\n    })\r\n} \r\n\r\nmodule.exports.orders = function(err, res){\r\n    orders.findAll().then(data=>{\r\n        if(!err){\r\n            res.send(data)\r\n        }\r\n    })\r\n} \r\n\r\nmodule.exports.listas_compras = function(err, res){\r\n    listas_compras.findAll().then(data=>{\r\n        if(!err){\r\n            res.send(data)\r\n        }\r\n    })\r\n}\r\n//***** */ Fim dos modelos findAll ****\r\n\r\n//==========================================================================================================\r\n\r\n// Devolve a identificação do usuário logado, exigindo por parâmetro o 'token_me': e-mail do usuário criptografado com sha1\r\n/*\r\n    As informações retornadas são:\r\n        1- Tipo de usuário.\r\n        2- ID de usuário.\r\n        3- ID de afiliado e de matriz ( se houver )\r\n        4- Nome de usuário.\r\n        5- E-mail do usuário.\r\n*/\r\nmodule.exports.me = function(body, res){\r\n\r\n    var query1 =\"select 'CLIENT' as USER_PROFILE, users_clients.id as USER_ID, users_client_affiliate_id as USER_AFFILIATE_ID, users_client_name as USER_NAME, users_client_mail as USER_MAIL  from users_clients inner join users_affiliates where sha1(concat(users_clients.id,users_client_mail)) = '\"+body.token_me+\"'\";\r\n    var query2 = \"select 'AFFILIATE' as USER_PROFILE, users_affiliates.id as USER_ID,users_affiliate_master_id as USER_MASTER_ID, users_affiliate_name as USER_NAME, users_affiliate_mail as USER_MAIL  from users_affiliates  inner join users_masters where sha1(concat(users_affiliates.id,users_affiliate_mail)) = '\"+body.token_me+\"'\";\r\n    var query3 = \"select 'MASTER' as USER_PROFILE, id as USER_ID, users_master_name as USER_NAME, users_master_mail as USER_MAIL  from users_masters where sha1(concat(id,users_master_mail)) = '\"+body.token_me+\"'\";\r\n\r\n   conn.query(query1, async function (error, results, fields) {\r\n        if (!error) {\r\n            if(results.length > 0){\r\n                res.send(results);\r\n            }else{\r\n                conn.query(query2, async function (error2, results2, fields2) {\r\n                    if (!error2) {\r\n                        if(results2.length > 0){\r\n                            res.send(results2);\r\n                        }else{\r\n                            conn.query(query3, async function (error3, results3, fields3) {\r\n                                if (!error3) {\r\n                                    if(results3.length > 0){\r\n                                        res.send(results3);\r\n                                    }else{\r\n                                        res.status(404).json({ message: \"User not found!\"});\r\n                                    }\r\n                                    \r\n                                } else {\r\n                                    res.send(error3);\r\n                                }\r\n                            });\r\n                            \r\n                        }\r\n                        \r\n                    } else {\r\n                        \r\n                        res.send(error2);\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        } else {\r\n            res.send(error);\r\n        }\r\n    });\r\n\r\n\r\n   \r\n} \r\n\r\n//==========================================================================================================\r\n\r\n// Realiza o login se valendo da 'SECRET_KEY' do JWT com tempo de expiração definido em 'TIME_TO_EXPIRE_SESSION' das váriáveis de ambiente.\r\n/*\r\n    Os pré-requisitos para funcionamento:\r\n        1- 'prefix' => prefixo da tabela baseado no tipo de usuário. Ex.: 'affiliate','master' ou 'client'\r\n        2- 'token' => password enviado pelo cliente para ser criptografado e salvo com sha1.\r\n        3- 'user' => nome do usuário.\r\n        4- 'table' => nome da tabela a ser modificada ( definida com base no tipo do usuário ).\r\n*/\r\nmodule.exports.login = function(body, res){\r\n    conn.query(\"select *, sha1(concat(id,\"+body.prefix+\"_mail)) as token_me from \"+body.table+\" where \"+body.prefix+\"_name = '\" + body.user + \"' and \"+body.prefix+\"_token = sha1('\" + body.password + \"')\", function (error, results, fields) {\r\n        if (results.length > 0) {\r\n            //auth ok\r\n            const id = 1; //esse id viria do banco de dados\r\n            const token = jwt.sign({ id }, process.env.MAIN_SECRET, {\r\n                expiresIn: Number(process.env.TIME_TO_EXPIRE_SESSION), // minutes to expire\r\n            });\r\n            return res.json({ auth: true, token: token, token_me: results[0].token_me });\r\n        } else {\r\n            res.status(500).json({ message: \"Login inválido!\" });\r\n        }\r\n    });\r\n}\r\n\r\n//==========================================================================================================\r\n\r\n// Consulta flexível em qualquer tabela baseada no 'id_name' e no 'id_value'\r\n/*\r\n    Os pré-requisitos para funcionamento:\r\n        1- 'id_name' => nome do id em questão ( a ser definido na página da requisição )\r\n        2- 'id_value' => valor a ser verificado para retorno\r\n        3- 'table' => nome da tabela ( a ser definida na página da requisição ).\r\n*/\r\nmodule.exports.getById = function(body, res){\r\n    if (body.table && body.id_name && body.id_value) {\r\n        execSQL(\"select * from \" + body.table + \" where \" + body.id_name + \" = '\" + body.id_value + \"'\", res);\r\n    } else {\r\n        res.status(500).json({ message: \"Invalid data parameters!\" });\r\n    }\r\n}\r\n\r\n//==========================================================================================================\r\n\r\n// Consulta flexível em qualquer tabela baseada em um parâmetro 'LIKE' em uma coluna específica.\r\n/*\r\n    Os pré-requisitos para funcionamento:\r\n        1- 'column_value' => valor a ser pesquisado.\r\n        2- 'column_name' => nome da coluna.\r\n        3- 'table' => nome da tabela ( a ser definida na página da requisição ).\r\n*/\r\nmodule.exports.getByLikeParams = function(body, res){\r\n    if (body.table && body.column_name && body.column_value) {\r\n        execSQL(\"select * from \" + body.table + \" where \" + body.column_name + \" like '%\" + body.column_value + \"%'\", res);\r\n    } else {\r\n        res.status(500).json({ message: \"Invalid data parameters!\" });\r\n    }\r\n}\r\n\r\n//==========================================================================================================\r\n\r\n// Consulta em qualquer tabela que possua relacionamento de usuário.\r\n/*\r\n    Os pré-requisitos para funcionamento:\r\n        1- 'client_id' => id do usuário chave.\r\n        2- 'column_name' => nome da coluna.\r\n        3- 'table' => nome da tabela ( a ser definida na página da requisição ).\r\n*/\r\nmodule.exports.getByClientId = function(body, res){\r\n    if (body.table && body.column_name && body.client_id) {\r\n        execSQL(\"select * from \" + body.table + \" where \" + body.column_name + \" = '\" + body.client_id + \"'\", res);\r\n    } else {\r\n        res.status(500).json({ message: \"Invalid data parameters!\" });\r\n    }\r\n}\r\n\r\n//==========================================================================================================\r\n\r\n\r\n// Atualização flexível de qualquer tabela com base no id\r\n/*\r\n    Os pré-requisitos para funcionamento:\r\n        1- 'fields' => array com as colunas e valores a serem atualizados.\r\n        2- 'name_id' => nome da coluna primária.\r\n        3- 'value_id' => valor do id a ser alterado.\r\n        4- 'table' => nome da tabela ( a ser definida na página da requisição ).\r\n    \r\n    Retornos:\r\n        1- Successo na update, sendo retorno padrão do mysql.\r\n        2- Erro interno com detalhes do field em questão que gerou o problema em 'details'\r\n*/\r\nmodule.exports.updateById = function(body, res){\r\n    if (body.table && body.fields.length > 0 && body.name_id && body.value_id) {\r\n        var fields = body.fields,\r\n            fieldSet = \"\";\r\n        for (const k in fieldSet) {\r\n            fieldSet += fields[k].column + \" = \" + fields[k].value + \",\";\r\n        }\r\n        fieldSet = fieldSet + \"where\";\r\n        fieldSet = fieldSet.replace(\",where\", \" where \");\r\n\r\n        execSQL(\"update \" + body.table + \" set \" + fieldSet + \" \" + body.name_id + \" = '\" + body.value_id + \"'\", res);\r\n    } else {\r\n        res.status(500).json({ message: \"Invalid data parameters!\" });\r\n    }\r\n}\r\n\r\n//==========================================================================================================\r\n\r\n// Insere valores em qualquer tabela\r\n/*\r\n    Os pré-requisitos para funcionamento:\r\n        1- 'fields' => array com as colunas e valores a serem atualizados.\r\n        2- 'table' => nome da tabela ( a ser definida na página da requisição ).\r\n    \r\n    Retornos:\r\n        1- Successo na update, sendo retorno padrão do mysql.\r\n        2- Erro interno com detalhes do field em questão que gerou o problema em 'details'\r\n*/\r\nmodule.exports.insertNew = function(body, res){\r\n    if (body.table.indexOf(\"user\") > -1) {\r\n        res.status(500).json({ message: \"Users tables not authorized!\" });\r\n    } else {\r\n        conn.query(\"desc \" + body.table, async function (error, results, fields3) {\r\n            if (!error) {\r\n                var columns = [],\r\n                    byUser = \"\",\r\n                    byDB = \" (\";\r\n\r\n                for (const k in results) {\r\n                    byDB += results[k].Field + \", \";\r\n                    if (results[k].Field != \"id\" && results[k].Field != \"updatedAt\" && results[k].Field != \"createdAt\") {\r\n                        columns.push({ fieldName: results[k].Field, fieldType: results[k].Type });\r\n                    }\r\n                }\r\n                byDB += \") \";\r\n                byDB = byDB.replace(\", )\", \")\");\r\n                var fields = body.fields,\r\n                    anomaly = [];\r\n                for (const k in fields) {\r\n                    for (const c in columns) {\r\n                        if (fields[k].fieldName === columns[c].fieldName) {\r\n                            if (columns[c].fieldType == \"int(11)\") {\r\n                                byUser += Number(fields[k].value) + \", \";\r\n                                if (!Number(fields[k].value)) {\r\n                                    anomaly.push({ yourField: fields[k], dbField: columns[c] });\r\n                                }\r\n                                break;\r\n                            }\r\n\r\n                            if (columns[c].fieldType == \"float\") {\r\n                                byUser += Number(fields[k].value) + \", \";\r\n                                if (!Number(fields[k].value)) {\r\n                                    anomaly.push({ yourField: fields[k], dbField: columns[c] });\r\n                                }\r\n                                break;\r\n                            }\r\n\r\n                            if (columns[c].fieldType == \"datetime\") {\r\n                                byUser += \"'\" + fields[k].value + \"', \";\r\n                                if (isNaN(new Date(fields[k].value))) {\r\n                                    anomaly.push({ yourField: fields[k], dbField: columns[c] });\r\n                                }\r\n                                break;\r\n                            }\r\n\r\n                            if (columns[c].fieldType == \"text\") {\r\n                                byUser += \"'\" + fields[k].value + \"', \";\r\n                                break;\r\n                            }\r\n                            byUser += \"'\" + fields[k].value + \"', \";\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (anomaly.length === 0 && fields.length == columns.length) {\r\n                    execSQL(\"insert into \" + body.table + \"  \" + byDB + \" values (null, \" + byUser + \" now(), now())\", res);\r\n                } else {\r\n                    res.status(500).json({ message: \"Invalid fields!\", Details: anomaly, ExpectedFields: columns, YourFields: fields });\r\n                }\r\n            } else {\r\n                res.send(error);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n//==========================================================================================================\r\n\r\n// Inicialização de novo usuário master, com verificação de já existência dos dados informados.\r\n/*\r\n    Os pré-requisitos para funcionamento:\r\n        1- 'mail' => e-mail principal.\r\n    Retornos:\r\n        1- Successo na inserção e no envio do e-mail com o código de 5 dígitos.\r\n        2- Erro interno com detalhes do field em questão que gerou o problema em 'details'\r\n    \r\n    Observação: \r\n        * Os parametros de conexão para envio de e-mail são setados nas variáveis de ambiente\r\n*/\r\nmodule.exports.startup = function(body, res){\r\n\r\n   \r\n    var code = Math.floor(Math.random() * 99999) + 11111;\r\n    var message = {\"to\":body.mail,\"from\":'no-reply@weg.net',\"subject\":'Confirmação de e-mail.',\"html\":'<p>Olá seu código de verificação é <b style=\"font-size: 20px; font-weight: bold\">'+code+'</b>.<br>Ele expira em 02 horas.<br>Validade: '+moment().add(2, 'hours').format(\"DD/MM/YYYY hh:mm:ss\")+'</p>'}\r\n                    \r\n    var parameters = {\r\n        \"host\": process.env.mail,\r\n        \"port\": process.env.mail_port,\r\n        \"secure\": process.env.secure,\r\n        \"auth\": process.env.auth,\r\n        \"username\": process.env.mail_user_name,\r\n        \"tls\": process.env.tls\r\n    }\r\n    var anomaly =[]\r\n\r\n    if(message.to && message.to != undefined && message.to != null && message.to.indexOf(\"@\") >-1 ){}else{ anomaly.push({\"field\":\"to\", \"toVerify\": message.to}) }\r\n   \r\n\r\n    if(anomaly.length > 0){\r\n        \r\n        res.status(500).json({ messageError: \"Invalid mail parameters or message!\", details: anomaly, yourMessage: body });\r\n    }else{\r\n       \r\n        conn.query('select * from users_masters where users_master_mail = sha1(\"'+body.mail+'\")', async function (error2, results, fields) {\r\n            if (!error2) {\r\n                if(results.length > 0){\r\n                    res.status(500).json({ message: \"This e-mail already exists!\", yourMessage: body });\r\n                }else{\r\n                    conn.query('insert into startupAndRecover values (null, sha1(\"'+body.mail+'\"), '+code+', \"'+moment().add(2, 'hours').format(\"YYYY-MM-DD hh:mm:ss\")+'\", \"'+moment().format(\"YYYY-MM-DD hh:mm:ss\")+'\", \"'+moment().format(\"YYYY-MM-DD hh:mm:ss\")+'\")', async function (error, results, fields) {\r\n                        if (!error) {\r\n                            var sender = sendMail(parameters, message);\r\n            \r\n                            res.send({\"responseOK\":true});\r\n                        } else {\r\n                            res.status(500).json({ messageError: \"Problem with database!\", errorSQL: error, details: anomaly, yourMessage: body });\r\n                        }\r\n                    });\r\n                }\r\n\r\n            } else {\r\n                res.status(500).json({ messageError: \"Problem with database!\", errorSQL: error2, details: anomaly, yourMessage: body });\r\n            }\r\n        });\r\n        \r\n        \r\n    }\r\n\r\n    \r\n}\r\n\r\n//==========================================================================================================\r\n\r\n// Envio de e-mail marketing ou informativo.\r\n/*\r\n    Os pré-requisitos para funcionamento:\r\n        1- 'message' => array contendo os dados 'to, from, html, subject'.\r\n    Retornos:\r\n        1- Successo no envio do e-mail marketing.\r\n        2- Erro interno com detalhes do field em questão que gerou o problema em 'details'\r\n    \r\n    Observação: \r\n        * Os parametros de conexão para envio de e-mail de marketing devem ser obtidos das filiais pra personalização de domínio.\r\n*/\r\nmodule.exports.sendNews = function(body, res){\r\n    var message = body.message;\r\n\r\n    var parameters = {};\r\n   if(body.affiliate_id != null && body.affiliate_id != \"\" && body.affiliate_id != undefined){\r\n    conn.query('select * from setup where affiliate_id = '+body.affiliate_id+' limit 1', async function (error, results, fields) {\r\n        if (!error) {\r\n           \r\n           parameters =  {\r\n                \"host\": results.host,\r\n                \"port\": results.port,\r\n                \"secure\": results.secure,\r\n                \"auth\": results.auth,\r\n                \"username\": results.mail_user_name,\r\n                \"tls\": results.tls\r\n            }\r\n\r\n            var anomaly =[]\r\n            //parameters verify\r\n            if(parameters.host && parameters.host != undefined && parameters.host != null && Number(parameters.host)){}else{ anomaly.push({\"field\":\"host\", \"toVerify\": parameters.host}) }\r\n            if(parameters.port && parameters.port != undefined && parameters.port != null && Number(parameters.port)){}else{ anomaly.push({\"field\":\"port\", \"toVerify\": parameters.port}) }\r\n            if(parameters.secure != undefined && parameters.secure != null){}else{ anomaly.push({\"field\":\"secure\", \"toVerify\": parameters.secure}) }\r\n            if(parameters.auth != undefined && parameters.auth != null){}else{ anomaly.push({\"field\":\"auth\", \"toVerify\": parameters.auth}) }\r\n            if(parameters.username && parameters.username != undefined && parameters.username != null && parameters.username.indexOf(\"@\") >-1){}else{ anomaly.push({\"field\":\"username\", \"toVerify\": parameters.username}) }\r\n            if(parameters.tls != undefined && parameters.tls != null){}else{ anomaly.push({\"field\":\"host\", \"toVerify\": parameters.host}) }\r\n            //message verify\r\n            if(message.from != undefined && message.from != null && message.from.indexOf(\"@\") >-1){}else{ anomaly.push({\"field\":\"from\", \"toVerify\": message.from}) }\r\n            if(message.to != undefined && message.to != null && message.to.indexOf(\"@\") >-1){}else{ anomaly.push({\"field\":\"to\", \"toVerify\": message.to}) }\r\n            if(message.subject != undefined && message.subject != null){}else{ anomaly.push({\"field\":\"subject\", \"toVerify\": message.subject}) }\r\n            if(message.html != undefined && message.html != null){}else{ anomaly.push({\"field\":\"html\", \"toVerify\": message.html}) }\r\n            //anomalys verify\r\n            if(anomaly.length > 0){\r\n                res.status(500).json({ messageError: \"Invalid mail parameters or message!\", details: anomaly, youtParameters: parameters, yourMessage: message });\r\n            }else{\r\n                var sender = sendMail(parameters, message);\r\n                res.send(sender);\r\n            }\r\n\r\n        } else {\r\n            res.status(500).json({ messageError: \"Problem with database!\", yourData: body, txtError: error });\r\n        }\r\n    });\r\n\r\n   }else{\r\n    res.status(500).json({ messageError: \"Affilaite ID not found!\", yourData: body });\r\n   }\r\n\r\n    \r\n    \r\n\r\n\r\n    \r\n   \r\n\r\n    \r\n\r\n    \r\n}\r\n\r\n//==========================================================================================================\r\n\r\n// Valida o código de 5 dígitos enviado por e-mail.\r\n/*\r\n    Os pré-requisitos para funcionamento:\r\n        1- 'token' => código de 5 dígitos recebido.\r\n        2- 'mail' => e-mail do cliente que recebeu.\r\n    Retornos:\r\n        1- Successo na verificação.\r\n        2- Verificação invalida.\r\n    \r\n*/\r\nmodule.exports.getValidCode = function(body, res){\r\n    if (body.token && body.mail) {\r\n    \r\n        conn.query(\"select * from startupAndRecover where verifyCode = \"+body.token+\" and mail = sha1('\"+body.mail+\"') and expires >= now()\", async function (error, results, fields) {\r\n            if (!error) {\r\n                if(results.length > 0){\r\n                    res.send({\"resultOk\": true, \"results\":results})\r\n                }else{\r\n                    res.status(500).json({ messageError: \"No results found!\", yourData: body });\r\n                }\r\n            } else {\r\n                res.status(500).json({ messageError: \"Problem with database!\", errorSQL: error, details: anomaly, yourMessage: body });\r\n            }\r\n        });\r\n        \r\n    } else {\r\n        res.status(500).json({ message: \"Invalid data parameters!\" });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","var fs = require(\"fs\");\r\nconst fs_Promises = require(\"fs\").promises;\r\n\r\n\r\n\r\nmodule.exports.getDocumentation = function(res){\r\n    fs.readFile(\"./apps/www.smartcommerci.co-node-js/src/data/documents.json\", \"utf8\", function (err, result) {\r\n        var data2 = JSON.parse(result);\r\n        data2 = data2.documents;\r\n        var data = [];\r\n\r\n        if (!err) {\r\n            start();\r\n\r\n\r\n            // Function to get code of the files\r\n            async function start() {\r\n                for (const k in data2) {\r\n                    var path = data2[k].file.toString();\r\n                    const pathNames = await fs_Promises.readFile(path);\r\n                    var language = \"javascript\"\r\n                    if(path.split(\".\")[path.split(\".\").length -1] == \"ejs\"){language = \"language-html\"}\r\n                    if(path.split(\".\")[path.split(\".\").length -1] == \"css\"){language = \"language-css\"}\r\n                    if(path.split(\".\")[path.split(\".\").length -1] == \"handlebars\"){language = \"language-html\"}\r\n                    data.push({ \r\n                      file: data2[k].file, \r\n                      details: data2[k].details, \r\n                      dependeces: data2[k].dependeces,\r\n                      language: language,\r\n                      context: pathNames.toString().trim() \r\n                    });\r\n                    \r\n                }\r\n\r\n                res.render(\"documentation\", {documents : data}); \r\n            }\r\n          \r\n        }\r\n    });\r\n} \r\n\r\n","/*======================= SMARTCOMMERCI USERS =========================== \r\n\r\nAuthor: Ronan Rodrigues\r\nContact: Tel.: 27 996011204, Mail: ronan.rodrigues@pullup.tech\r\nObjective: Consultar e alterar os dados de usuários conforme as regras do negócio\r\n\r\n=========================================================================*/\r\n\r\n\r\n\r\n// Importando modelos e dependências\r\nvar users_masters = require('../models/users_masters');\r\nvar users_affiliates = require('../models/users_affiliates');\r\nvar users_clients = require('../models/users_clients');\r\nconst mysql = require(\"mysql\");\r\n\r\n\r\n// Configurando uma conexão com o database\r\nconst conn = mysql.createConnection({\r\n    host: process.env.host,\r\n    port: process.env.port,\r\n    user: process.env.user,\r\n    password: process.env.password,\r\n    database: process.env.database\r\n});\r\n\r\n//==========================================================================================================\r\n\r\n// Função para executar um comando SQL\r\n// Parametros: query= 'QUERY SQL VÁLIDA'; res = 'RESPONSE'\r\nasync function execSQL(query, res) {\r\n    console.log(query);\r\n    conn.query(query, async function (error, results, fields) {\r\n        if (!error) {\r\n            res.send(results);\r\n        } else {\r\n            res.send(error);\r\n        }\r\n    });\r\n}\r\n\r\n//==========================================================================================================\r\n\r\n// Exporta todos Usuários Master\r\n// Parametros: \r\nmodule.exports.users_masters = function(err, res){\r\n    users_masters.findAll().then(data=>{\r\n        if(!err){\r\n            res.send(data)\r\n        }\r\n    })\r\n}\r\n\r\n\r\n//==========================================================================================================\r\n\r\n// Exporta todos Usuários Affiliates \r\n// Parametros: \r\nmodule.exports.users_affiliates = function(err, res){\r\n    users_affiliates.findAll().then(data=>{\r\n        if(!err){\r\n            res.send(data)\r\n        }\r\n    })\r\n} \r\n\r\n\r\n//==========================================================================================================\r\n\r\n// Exporta todos Usuários Clients \r\n// Parametros: \r\nmodule.exports.users_clients = function(err, res){\r\n    users_clients.findAll().then(data=>{\r\n        if(!err){\r\n            res.send(data)\r\n        }\r\n    })\r\n} \r\n\r\n//==========================================================================================================\r\n\r\n// Insere novo usuário contanto que não exista outro com mesmo e-mail\r\n/* Parametros: \r\n        body= {\r\n            'table'; 'users_clients' ou 'users_masters' ou 'users_affiliates', \r\n            'prefix': 'NOME DA TABELA SEM O 's' NO FIM. EX.: 'users_master', \r\n            'mail': 'E-MAIL DO NOVO USUÁRIO',\r\n            'fields': 'ARRAY COM TODOS OS CAMPOS DA TABELA E SEUS RESPECTIVOS VALORES, EX.: \r\n                        [\r\n                                {\"fieldName\":\"users_client_affiliate_id\" , \"value\": 1},  ==> Valor informado pelo ambiente da loja em questão ao ser acessada!\r\n                                {\"fieldName\":\"users_client_name\" , \"value\": \"Ronan Rodrigues\"},\r\n                                {\"fieldName\":\"users_client_mail\" , \"value\": \"meuEmail@meuemail.com\"},\r\n                                {\"fieldName\":\"users_client_token\" , \"value\": \"minhasenhaValida\"},\r\n                                {\"fieldName\":\"users_client_cpf\" , \"value\": 123456789102},\r\n                                {\"fieldName\":\"users_client_endereco\" , \"value\": \"Rua XXXX Nº XXXX\"},\r\n                                {\"fieldName\":\"users_client_cep\" , \"value\": \"29000000\"},\r\n                                {\"fieldName\":\"users_client_bairro\" , \"value\": \"Jacupemba\"},\r\n                                {\"fieldName\":\"users_client_listas_compras\" , \"value\": \"Principal\"},\r\n                                {\"fieldName\":\"users_client_cidade\" , \"value\": \"Aracruz\"}\r\n                        ]\r\n            }\r\n    Respostas:\r\n            'Success' com os valores fieldCount, affectedRows, insertId, serverStatus e warningCount\r\n            'Error' status 500, 'Internal Server Error' com 'responseJSON' => responseJSON: {message: \"User mail already exists!\"} ou Details: {'ExpectedFields: [Array], YourFields: [Array]}\r\n\r\n*/\r\nmodule.exports.insertNew = function(body, res){\r\n\r\n    conn.query(\"select * from \"+body.table+\" where \"+body.prefix+\"_mail = sha1('\"+body.mail+\"')\", async function (error, results, fields) {\r\n        if (!error) {\r\n            console.log(results)\r\n            if(results.length > 0){\r\n                res.status(500).json({ message: \"User mail already exists!\" });\r\n            }else{\r\n                if (body.table.indexOf(\"user\") > -1) {\r\n                    conn.query(\"desc \" + body.table, async function (error, results, fields) {\r\n                        if (!error) {\r\n                            var columns = [],\r\n                                byUser = \"\",\r\n                                byDB = \" (\";\r\n            \r\n                            for (const k in results) {\r\n                                byDB += results[k].Field + \", \";\r\n                                if (results[k].Field != \"id\" && results[k].Field != \"updatedAt\" && results[k].Field != \"createdAt\") {\r\n                                    columns.push({ fieldName: results[k].Field, fieldType: results[k].Type });\r\n                                }\r\n                            }\r\n                            byDB += \") \";\r\n                            byDB = byDB.replace(\", )\", \")\");\r\n                            var fields = body.fields,\r\n                                anomaly = [];\r\n                            for (const k in fields) {\r\n                                for (const c in columns) {\r\n                                    if (fields[k].fieldName === columns[c].fieldName) {\r\n                                        if (columns[c].fieldType == \"int(11)\") {\r\n                                            byUser += Number(fields[k].value) + \", \";\r\n                                            if (!Number(fields[k].value)) {\r\n                                                anomaly.push({ yourField: fields[k], dbField: columns[c] });\r\n                                            }\r\n                                            break;\r\n                                        }\r\n            \r\n                                        if (columns[c].fieldType == \"float\") {\r\n                                            byUser += Number(fields[k].value) + \", \";\r\n                                            if (!Number(fields[k].value)) {\r\n                                                anomaly.push({ yourField: fields[k], dbField: columns[c] });\r\n                                            }\r\n                                            break;\r\n                                        }\r\n            \r\n                                        if (columns[c].fieldType == \"datetime\") {\r\n                                            byUser += \"'\" + fields[k].value + \"', \";\r\n                                            if (isNaN(new Date(fields[k].value))) {\r\n                                                anomaly.push({ yourField: fields[k], dbField: columns[c] });\r\n                                            }\r\n                                            break;\r\n                                        }\r\n\r\n                                        if (fields[k].fieldName.indexOf(\"token\") > -1 || fields[k].fieldName.indexOf(\"mail\") > -1) {\r\n                                            byUser += \"sha1('\" + fields[k].value + \"'), \";                                         \r\n                                            break;\r\n                                        }\r\n\r\n                                       \r\n\r\n                                        \r\n            \r\n                                        if (columns[c].fieldType == \"text\") {\r\n                                            byUser += \"'\" + fields[k].value + \"', \";\r\n                                            break;\r\n                                        }\r\n                                        byUser += \"'\" + fields[k].value + \"', \";\r\n                                    }\r\n                                }\r\n                                \r\n                            }\r\n            \r\n                            if (anomaly.length === 0 && fields.length == columns.length) {\r\n                                execSQL(\"insert into \" + body.table + \"  \" + byDB + \" values (null, \" + byUser + \" now(), now())\", res);\r\n                            } else {\r\n                                res.status(500).json({ message: \"Invalid fields!\", Details: anomaly, ExpectedFields: columns, YourFields: fields });\r\n                            }\r\n                        } else {\r\n                            res.send(error);\r\n                        }\r\n                    });\r\n                } else {\r\n                    res.status(500).json({ message: \"Business tables not authorized!\" });\r\n                }\r\n\r\n            }\r\n        } else {\r\n            res.send(error);\r\n        }\r\n    });\r\n}\r\n\r\n//==========================================================================================================\r\n\r\n// Altera a senha conforme e-mail enviado\r\n/*\r\nbody= {\r\n            'table'; 'users_clients' ou 'users_masters' ou 'users_affiliates',\r\n            'prefix': 'NOME DA TABELA SEM O 's' NO FIM. EX.: 'users_master', \r\n            'token_me': 'CHAVE TOKEN TO USUÁRIO ENVIADO NO E-MAIL DE RECUPERAÇÃO DE SENHA', \r\n            'mail': 'E-MAIL DO NOVO USUÁRIO', \r\n       }\r\nRespostas:\r\n            'Success' com os valores fieldCount, affectedRows, insertId, serverStatus e warningCount\r\n*/\r\nmodule.exports.recoverPassword = function(body, res){\r\n    conn.query(\"select * from \"+body.table+\" where sha1(id,\"+body.prefix+\"_mail) =  '\"+body.token_me+\"'\", async function (error, results, fields) {\r\n        if(results.length > 0){\r\n            if(body.new_token && body.prefix && body.table){\r\n                execSQL(\"update \"+body.table+\" set \"+body.prefix+\"_token = sha1('\"+body.new_token+\"') where id = '\"+body.user_id+\"'\",res);\r\n            }else{\r\n                res.status(500).json({ message: \"Invalid parameters!\", Details: body });\r\n            } \r\n\r\n        }else{\r\n            res.status(500).json({ message: \"Invalid parameters!\", Details: body });\r\n        }\r\n    });\r\n \r\n      \r\n}","/*======================= SMARTCOMMERCI MAIN =========================== \r\n\r\nAuthor: Ronan Rodrigues\r\nContact: Tel.: 27 996011204, Mail: ronan.rodrigues@pullup.tech\r\nObjective: Script principal que orquestra os controladores, as rotas e os modelos de  dados\r\n\r\n=========================================================================*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Chamando dependências e configurando o app\r\nvar express = require(\"express\");\r\nvar consign = require(\"consign\");\r\nvar app = express();\r\nconst bodyParser = require(\"body-parser\");\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(bodyParser.json());\r\napp.use(express.static(\"./apps/www.smartcommerci.co-node-js/src/public\"));\r\nconst cors = require(\"cors\");\r\napp.use(express.json());\r\nvar fs = require(\"fs\");\r\nconst fs_Promises = require(\"fs\").promises;\r\nconst jwt = require(\"jsonwebtoken\");\r\n\r\n// Configurando a engine de views para a documentação web\r\napp.set('views', './apps/www.smartcommerci.co-node-js/src/views');\r\napp.set('view engine', 'ejs');\r\n\r\n\r\n// Importando as variaveis de ambiente\r\nrequire(\"dotenv\").config();\r\n\r\n// Ajuste de CROSS DOMAIN para reutilização da API\r\napp.use((req, res, next) => {  \r\n    res.header(\"Access-Control-Allow-Origin\", \"*\");  \r\n    res.header(\"Access-Control-Allow-Methods\", \"GET,PUT,POST,DELETE\");\r\n    app.use(cors());\r\n    next();\r\n});\r\n\r\n\r\n\r\n// Função principal para JWT ( Jason Web Token ), validando todas as conexões com os end-points\r\nfunction verifyJWT (req, res, next) {\r\n   \r\n    const token = req.headers[\"x-access-token\"];    \r\n    if (!token) return res.status(401).json({ auth: false, message: \"No token provided.\" });\r\n    \r\n    jwt.verify(token, process.env.MAIN_SECRET, function (err, decoded) {\r\n            console.log(decoded)\r\n            if (err) return res.status(500).json({ auth: false, message: \"Failed to authenticate token.\" });\r\n            // se tudo estiver ok, salva no request para uso posterior\r\n            req.userId = decoded.id;\r\n            next();\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Inserindo Rotas e Regras de Negócio\r\nvar routes  = require(\"./routes/routes\")\r\nrequire(\"./controllers/business\")\r\nrequire(\"./controllers/users\")\r\n\r\n\r\n// Chamando as rotas\r\nroutes.login(app,verifyJWT);\r\nroutes.getByClientId(app,verifyJWT);\r\nroutes.getById(app,verifyJWT);\r\nroutes.getByLikeParams(app,verifyJWT);\r\nroutes.updateById(app,verifyJWT);\r\nroutes.insertNew(app,verifyJWT);\r\nroutes.newLoginInsert(app,verifyJWT);\r\nroutes.me(app,verifyJWT);\r\nroutes.recoverPassword(app,verifyJWT);\r\nroutes.documentation(app);\r\nroutes.startup(app,verifyJWT);\r\nroutes.sendNews(app,verifyJWT);\r\nroutes.getValidCode(app,verifyJWT);\r\nroutes.myColors(app,verifyJWT);\r\nroutes.uploadLogo(app,verifyJWT);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Apontando a porta e ouvindo as requests\r\napp.listen(process.env.PORT_APPLICATION, function () {\r\n    console.log(\"Port \"+process.env.PORT_APPLICATION);\r\n});\r\n","const db = require('./db')\r\nconst affiliates = db.sequelize.define('affiliates',{       \r\n    \r\n    affiliates_master_id:{\r\n        type:db.Sequelize.INTEGER\r\n    },\r\n    affiliates_business_name:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    affiliates_business_telefone:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    affiliates_business_mail:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    affiliates_business_horario:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    affiliates_business_endereco:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    affiliates_business_numero:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    affiliates_business_cep:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    affiliates_business_cidade:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    affiliates_business_estado:{\r\n        type:db.Sequelize.STRING\r\n    }\r\n})\r\n\r\nmodule.exports = affiliates","const db = require('./db')\r\nconst carts = db.sequelize.define('carts',{    \r\n\r\n    cart_affiliate_id:{\r\n        type:db.Sequelize.INTEGER\r\n    },\r\n    cart_client_id:{\r\n        type:db.Sequelize.INTEGER\r\n    },\r\n    cart_status:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    cart_conteudo:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    cart_valor_total:{\r\n        type:db.Sequelize.FLOAT\r\n    }\r\n})\r\n\r\nmodule.exports = carts","/*=========== Database Settings Default for Sequelize ===========\r\n\r\nAuthor: Ronan Rodrigues\r\nContact: Tel.: 27 996011204, Mail: ronan.rodrigues@pullup.tech\r\nObjective: Definir as configurações do módulo Sequelize testar a conexão\r\n           e exportar o serviço.\r\n\r\n=================================================================*/\r\n\r\n\r\n\r\n// Importando dependencias\r\nconst Sequelize = require('sequelize');\r\nconst Op = Sequelize.Op\r\n\r\n\r\n\r\n\r\n// Setando credenciais\r\nconst sequelize = new Sequelize(\r\n    process.env.database,\r\n    process.env.user,\r\n    process.env.password, {\r\n    host:process.env.host,\r\n    dialect:'mysql'\r\n})\r\n\r\n// Testando conexão\r\nsequelize.authenticate().then( function(){\r\nconsole.log(\"Connection ok!\")\r\n}).catch(function(erro){\r\n    console.log(\"Throw error db: \"+ erro)\r\n})\r\n\r\n\r\nmodule.exports = {    \r\n    Sequelize:Sequelize,\r\n    Op: Op,\r\n    sequelize: sequelize\r\n}","\r\n\r\n\r\n\r\nconst db = require('./db')\r\nconst listas_compras = db.sequelize.define('listas_compras',{      \r\n  \r\n    lista_affiliate_id:{\r\n        type:db.Sequelize.INTEGER\r\n    },\r\n    lista_client_id:{\r\n        type:db.Sequelize.INTEGER\r\n    },\r\n    lista_name:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    lista_conteudo:{\r\n        type:db.Sequelize.STRING\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\nmodule.exports = listas_compras","const db = require('./db')\r\nconst masters = db.sequelize.define('masters',{       \r\n  \r\n    master_business_name:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    master_business_cnpj:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    master_business_razao:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    master_business_telefone:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    master_business_mail:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    master_business_horario:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    master_business_endereco:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    master_business_numero:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    master_business_cep:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    master_business_cidade:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    master_business_estado:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    master_custom_segmento:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    master_custom_logo:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    master_custom_cor_primeira:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    master_custom_cor_segunda:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    master_custom_cor_terceira:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    master_custom_cor_quarta:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    master_custom_categorias:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    master_custom_ferramentas:{\r\n        type:db.Sequelize.STRING\r\n    }\r\n})\r\n\r\nmodule.exports = masters","const db = require('./db')\r\nconst orders = db.sequelize.define('orders',{ \r\n  \r\n    order_affiliate_id:{\r\n        type:db.Sequelize.INTEGER\r\n    },\r\n    order_client_id:{\r\n        type:db.Sequelize.INTEGER\r\n    },\r\n    order_status:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    order_data_entrega:{\r\n        type:db.Sequelize.DATE\r\n    },\r\n    order_metodo_pagamento:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    order_cpf_nf:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    order_tamanho_cesta:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    order_conteudo:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    order_valor_total:{\r\n        type:db.Sequelize.FLOAT\r\n    }\r\n})\r\n\r\nmodule.exports = orders","const db = require('./db')\r\nconst posts = db.sequelize.define('posts',{ \r\n    \r\n    post_affiliate_id:{\r\n        type:db.Sequelize.INTEGER\r\n    },\r\n    post_titulo:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    post_chamada:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    post_categoria:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    post_etiquetas:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    post_conteudo:{\r\n        type:db.Sequelize.STRING\r\n    }\r\n})\r\n\r\nmodule.exports = posts","const db = require('./db')\r\nconst products = db.sequelize.define('products',{ \r\n  \r\n    product_affiliate_id:{\r\n        type:db.Sequelize.INTEGER\r\n    },\r\n    product_descricao:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    product_valor:{\r\n        type:db.Sequelize.FLOAT\r\n    },\r\n    product_categoria:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    product_fabricacao:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    product_estoque:{\r\n        type:db.Sequelize.INTEGER\r\n    },\r\n    product_medida:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    product_etiquetas:{\r\n        type:db.Sequelize.STRING\r\n    }\r\n})\r\n\r\nmodule.exports = products","const db = require('./db')\r\nconst users_affiliates = db.sequelize.define('users_affiliates',{\r\n  \r\n    users_affiliate_master_id:{\r\n        type:db.Sequelize.INTEGER\r\n    },\r\n    users_affiliate_name:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    users_affiliate_perfil:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    users_affiliate_mail:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    users_affiliate_token:{\r\n        type:db.Sequelize.STRING\r\n    }\r\n})\r\n\r\nmodule.exports = users_affiliates","const db = require('./db')\r\nconst users_clients = db.sequelize.define('users_clients',{\r\n    \r\n    users_client_affiliate_id:{\r\n        type:db.Sequelize.INTEGER\r\n    },\r\n    users_client_name:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    users_client_mail:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    users_client_token:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    users_client_cpf:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    users_client_endereco:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    users_client_cep:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    users_client_bairro:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    users_client_cidade:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    users_client_listas_compras:{\r\n        type:db.Sequelize.STRING\r\n    }\r\n})\r\n\r\nmodule.exports = users_clients","const db = require('./db')\r\nconst users_master = db.sequelize.define('users_masters',{\r\n   \r\n    \r\n  \r\n    users_master_name:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    users_master_mail:{\r\n        type:db.Sequelize.STRING\r\n    },\r\n    users_master_token:{\r\n        type:db.Sequelize.STRING\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\nmodule.exports = users_master","/*======================= SMARTCOMMERCI ROUTES =========================================================== \r\n\r\nAuthor: Ronan Rodrigues\r\nContact: Tel.: 27 996011204, Mail: ronan.rodrigues@pullup.tech\r\nObjective: Definir as rotas da API\r\n\r\n=========================================================================================================*/\r\n\r\n// Obetendo as dependências\r\nvar business = require(\"../controllers/business\")\r\nvar users = require(\"../controllers/users\")\r\nvar documentation = require(\"../controllers/documentation\")\r\n\r\n//==========================================================================================================\r\n// Rota para login\r\nmodule.exports.login = function (app, verifyJWT) {\r\n    app.post(\"/login\", function (req, res) {\r\n       business.login(req.body,res);\r\n    });\r\n};\r\n\r\n//==========================================================================================================\r\n// Rota para busca baseada no ID\r\n\r\nmodule.exports.getById = function (app, verifyJWT) {\r\n    app.post(\"/getById\", verifyJWT, function (req, res) {\r\n        business.getById(req.body, res)\r\n    });\r\n};\r\n\r\n//==========================================================================================================\r\n// Rota para busca baseada em um parâmetro 'LIKE'\r\n\r\nmodule.exports.getByLikeParams = function (app, verifyJWT) {\r\n    app.post(\"/getByLikeParams\", verifyJWT, function (req, res) {\r\n       business.getByLikeParams(req.body, res)\r\n    });\r\n};\r\n\r\n//==========================================================================================================\r\n// Rota para busca baseada em usuário chave\r\n\r\nmodule.exports.getByClientId = function (app, verifyJWT) {\r\n    app.post(\"/getByClientId\", verifyJWT, function (req, res) {\r\n       business.getByClientId(req.body, res)\r\n    });\r\n};\r\n\r\n//==========================================================================================================\r\n// Rota para update de dados pelo ID\r\n\r\nmodule.exports.updateById = function (app, verifyJWT) {\r\n    app.post(\"/updateById\", verifyJWT, function (req, res) {\r\n        business.updateById(req.body, res)\r\n    });\r\n};\r\n\r\n//==========================================================================================================\r\n// Rota para inserir dados em tabelas\r\n\r\nmodule.exports.insertNew = function (app, verifyJWT) {\r\n    app.post(\"/insertNew\", verifyJWT, function (req, res) {\r\n        business.insertNew(req.body, res)\r\n    });\r\n};\r\n\r\n//==========================================================================================================\r\n// Rota para inserir um novo usuário ( tratado de forma separa das outras tabelas )\r\n\r\nmodule.exports.newLoginInsert = function (app, verifyJWT) {\r\n    app.post(\"/newLoginInsert\", verifyJWT, function (req, res) {\r\n        users.insertNew(req.body, res)\r\n    });\r\n};\r\n\r\n//==========================================================================================================\r\n// Rota para recuperar password\r\n\r\nmodule.exports.recoverPassword = function (app, verifyJWT) {\r\n    app.post(\"/recoverPassword\", verifyJWT, function (req, res) {\r\n        users.recoverPassword(req.body, res)\r\n    });\r\n};\r\n\r\n//==========================================================================================================\r\n// Rota para identificar usuário\r\n\r\nmodule.exports.me = function (app, verifyJWT) {\r\n    app.post(\"/me\", verifyJWT, function (req, res) {\r\n        business.me(req.body, res)\r\n    });\r\n};\r\n\r\n//==========================================================================================================\r\n// Rota para a documentação\r\n\r\nmodule.exports.documentation = async function (app) {\r\n    app.get(\"/documentation\", async function (req, res) {\r\n        documentation.getDocumentation(res);\r\n    });\r\n};\r\n\r\n//==========================================================================================================\r\n// Rota para primeiro acesso como matriz\r\n\r\nmodule.exports.startup = async function (app, verifyJWT) {\r\n    app.post(\"/startup\", verifyJWT, async function (req, res) {\r\n        business.startup(req.body, res);\r\n    });\r\n};\r\n\r\n//==========================================================================================================\r\n// Rota para envio de e-mail marketing\r\n\r\nmodule.exports.sendNews = async function (app, verifyJWT) {\r\n    app.post(\"/sendNews\", verifyJWT, async function (req, res) {\r\n        business.sendNews(req.body, res);\r\n    });\r\n};\r\n\r\n//==========================================================================================================\r\n// Rota para verificar código de 5 dígitos\r\n\r\nmodule.exports.getValidCode = async function (app, verifyJWT) {\r\n    app.post(\"/getValidCode\", verifyJWT, async function (req, res) {\r\n        business.getValidCode(req.body, res);\r\n    });\r\n};\r\n\r\n//==========================================================================================================\r\n// Rota para realizar upload da logotipo\r\n\r\nmodule.exports.uploadLogo = async function (app, verifyJWT) {\r\n  \r\n    app.post('/uploadLogo', verifyJWT, (req, res) => {\r\n        try{\r\n          \r\n            const formidable = require('formidable');\r\n            const fs = require('fs');\r\n            const form = new formidable.IncomingForm();\r\n            const dir = \"./apps/www.smartcommerci.co-node-js/src/data/images/\"+req.headers.user_id;\r\n\r\n                //Verifica se não existe\r\n                if (!fs.existsSync(dir)){\r\n                    //Efetua a criação do diretório\r\n                    fs.mkdirSync(dir);\r\n                }\r\n\r\n            \r\n            \r\n            form.parse(req, (err, fields, files) => {\r\n         \r\n                \r\n                const path = require('path');\r\n                const oldpath = files.fileimage.path;\r\n                const newpath = path.join(\"\", './apps/www.smartcommerci.co-node-js/src/data/images/'+req.headers.user_id+'/', files.fileimage.name);\r\n               \r\n                \r\n                fs.renameSync(oldpath, newpath);\r\n                res.send({\"resultOk\": true, \"message\":\"File uploaded\"})\r\n            });\r\n\r\n        }catch(error){\r\n            res.status(500).json({ message: \"Invalid data parameters!\", errorMessage: error });\r\n        }\r\n       \r\n    });\r\n    \r\n\r\n\r\n};\r\n\r\n//==========================================================================================================\r\n// Rota para coletar as cores da logotipo enviada\r\n\r\nmodule.exports.myColors = async function (app, verifyJWT) {\r\n    app.post(\"/myColors\", async function(req, res) {\r\n        console.log(req.body)\r\n        const path = require('path')\r\n        const getColors = require('get-image-colors')         \r\n        getColors(path.join(\"./apps/www.smartcommerci.co-node-js/src/data/images/\"+req.headers.user_id+\"/\", req.body.file)).then(colors => {\r\n            res.send(colors)\r\n        })\r\n    });\r\n    \r\n\r\n};\r\n","module.exports = require(\"body-parser\");","module.exports = require(\"consign\");","module.exports = require(\"cors\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"formidable\");","module.exports = require(\"fs\");","module.exports = require(\"get-image-colors\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"moment\");","module.exports = require(\"mysql\");","module.exports = require(\"nodemailer\");","module.exports = require(\"path\");","module.exports = require(\"sequelize\");","module.exports = require(\"tslib\");"],"sourceRoot":""}